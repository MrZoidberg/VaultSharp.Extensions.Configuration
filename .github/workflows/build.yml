name: Build

on:
  pull_request:
  push:
    branches:

env:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: true
        fetch-depth: 0
    - name: 'Git Fetch Tags'
      run: git fetch --tags
      shell: pwsh
    - name: 'Install .NET Core SDK'
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - name: 'Dotnet Tool Restore'
      run: dotnet tool restore
      shell: pwsh
    - name: 'Dotnet Cake Build'
      run: dotnet cake --target=Build
      shell: pwsh
    - name: 'Dotnet Cake Test'
      run: dotnet cake --target=Test
      shell: pwsh
    - name: Copy Coverage To Predictable Location
      if: github.event_name == 'pull_request'
      run: cp coverage/*/coverage.cobertura.xml coverage/coverage.cobertura.xml
    - name: Code Coverage Summary Report
      if: github.event_name == 'pull_request'
      uses: irongut/CodeCoverageSummary@v1.0.2
      with:
        filename: coverage/coverage.cobertura.xml
        badge: true
        format: "markdown"
        output: "both"
    - run: npm install fs
      if: github.event_name == 'pull_request'
    - uses: actions/github-script@v5
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs')
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üôã‚Äç‚ôÇÔ∏è üë∑‚Äç‚ôÄÔ∏èüë∑‚Äç‚ôÇÔ∏èüèóÔ∏è \n\n' + fs.readFileSync('./code-coverage-results.md', 'utf8')
          })
    - name: 'Dotnet Cake Pack'
      run: dotnet cake --target=Pack
      shell: pwsh
